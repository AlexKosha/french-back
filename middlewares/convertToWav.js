import ffmpeg from "fluent-ffmpeg";
import ffmpegStatic from "ffmpeg-static";
import path from "path";
import fs from "fs";

ffmpeg.setFfmpegPath(ffmpegStatic);

export const convertToWav = (req, res, next) => {
  if (!req.file) {
    return next(); // –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ –∑–º—ñ–Ω
  }

  const inputPath = req.file.path;
  const outputPath = path.join(path.dirname(inputPath), `${Date.now()}.wav`);

  console.log(`üé§ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è: ${inputPath} -> ${outputPath}`);

  ffmpeg(inputPath)
    .toFormat("wav")
    .audioCodec("pcm_s16le") // Google Speech API –ø—Ä–∏–π–º–∞—î —Ç—ñ–ª—å–∫–∏ LINEAR16
    .audioChannels(1) // –ü—Ä–∏–º—É—Å–æ–≤–æ –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É –ú–û–ù–û
    .audioFrequency(16000) // Google —Ä–µ–∫–æ–º–µ–Ω–¥—É—î 16000 Hz
    .on("end", () => {
      console.log("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:", outputPath);

      if (fs.existsSync(inputPath)) {
        fs.unlinkSync(inputPath); // –í–∏–¥–∞–ª—è—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ñ–∞–π–ª, —è–∫—â–æ –≤—ñ–Ω —î
      }

      req.file.path = outputPath; // –û–Ω–æ–≤–ª—é—î–º–æ —à–ª—è—Ö —Ñ–∞–π–ª—É
      next();
    })
    .on("error", (err) => {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó:", err);
      next(err);
    })
    .save(outputPath);
};
